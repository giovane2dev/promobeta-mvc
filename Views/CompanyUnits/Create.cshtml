@model Promobeta.Models.CompanyUnits

@{
    ViewBag.Title = "Nova unidade";
}

<div class="row">
    <div class="col-6 mx-auto">
        <div class="card">
            <div class="card-header p-2">
                <h5 class="mb-0">Nova unidade</h5>
            </div>
            <div class="card-body p-2">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.EditorFor(model => model.CompanyId, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.RegistrationDate, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.RegistrationDate, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CellphoneNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.CellphoneNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.CellphoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TelephoneNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressNumber, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.AddressNumber, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.AddressNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Complement, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Complement, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.Complement, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City.State.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("StateId", null, htmlAttributes: new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(model => model.City.State.Name, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <button class="btn btn-sm btn-dark d-flex flex-row align-items-center" type="submit">
                            <i class="fa fa-check mr-1"></i>Criar nova unidade
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>